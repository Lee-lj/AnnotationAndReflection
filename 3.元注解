元注解(meta-annotation)的作用是负责注解其他的注解,java定义了四个标准的meta-annotation类型，他们被用来提供对其他的annotation
注解类型进行说明

这些类型和他们所支持的类在java.lang.annotation中可找到(@Target,@Retention,@Documented,@Inherited)

@Target:用于描述注解的使用范围(指定被描述的注解可以用在什么地方)
@Retention:表示需要在什么级别保存该注解信息，用于描述注解的生命周期(Source源码<class编译时<runtime运行时)
，自定义的注解都为Runtime，运行时有效(表示在什么时候有效)


Documented:说明该注解将生成在javadoc中  文档
@Inherited:说明子类可以继承父类中的注解

自定义注解:使用@interface 自定义注解，自动继承了java.lang.annotation.Annotation接口
@interface用来声明一个注解，格式:public @interface 注解名{定义内容}
其中的每一个方法实际上是声明了一个配置参数
方法的名称就是参数的名称
返回值类型就是参数类型(只能是基本类型，Class，String，enum)
可以通过default设置参数默认值
如果只有一个参数成员，一般参数名为value
注解元素必须要有值，定义元素时经常使用空字符串0作为默认值